function showCommunity(key) {
    document.getElementById('top_line').textContent = "Community"
    document.getElementById('top_btn').onclick = function() {
        closeCommunity()
    }
    document.getElementById("home_tab").style.display = "none"
    document.getElementById("collection_tab").style.display = "none"
    document.getElementById("shop_tab").style.display = "none"
    document.getElementById("event_tab").style.display = "none"
    document.getElementById("Community_section").style.display = "block"
    document.getElementById("testbed").style.backgroundColor = "#f6f6f6"
    nowtab = key
    loadPosts()
    community_open = 1
}

function showArtistMessage(key) {
    document.getElementById('top_btn').onclick = function() {
        closeArtistMessage()
    }
    document.getElementById('MyPage_img_element').src = "esset/artistpoint.webp"
    document.getElementById("home_tab").style.display = "none"
    document.getElementById("collection_tab").style.display = "none"
    document.getElementById("shop_tab").style.display = "none"
    document.getElementById("event_tab").style.display = "none"
    document.getElementById("Artist_message_section").style.display = "block"
    document.getElementById("testbed").style.backgroundColor = "#f6f6f6"
    nowtab = key
    community_open = 2
}

// 게시글 로드
async function loadPosts() {
    const postsContainer = document.getElementById('Community_content_section');
    postsContainer.innerHTML = ''; // 기존 게시글 초기화

    const doc = await DB.collection('Community').doc('temporarily').get();
    const data = doc.data();
    const postIds = (data.list || []).reverse();

    // 게시글 하나씩 로드
    for (const postId of postIds) {
      const post = data[postId];
      const postElement = document.createElement('div');
      postElement.classList.add('community_media_style');

      // 닉네임, 내용, 이미지 추가
      postElement.innerHTML = `
        <h4 style="color: blueviolet; margin: 0;" class="black">${post.nickname}</h4>
        <p style="margin: 0;" class="black">${post.content}</p>
      `;
      post.img.forEach((imgPath, index) => {
        const img = document.createElement('img');
        STORAGE.ref().child(imgPath).getDownloadURL().then(url => {
          img.src = url;
          img.style.width = "50%";
          img.style.aspectRatio = "1 / 1"
          img.style.objectFit = "cover";
          postElement.appendChild(img);
          img.onclick = function () {
            openPopup(url)
          }
        });
      });

      postsContainer.appendChild(postElement);
    }
  }

  
function closeCommunity() {
    document.getElementById('top_line').textContent = "GSUGAR"
    document.getElementById('top_btn').onclick = function() {
        closeSpecial()
    }
    control_key = ["home_tab", "collection_tab", "shop_tab", "event_tab"]
    document.getElementById(control_key[nowtab]).style.display = "block"
    document.getElementById("Community_section").style.display = "none"
    document.getElementById("testbed").style.backgroundColor = "white"
    open_section = ""
}

function closeArtistMessage() {
    document.getElementById('top_btn').onclick = function() {
        closeSpecial()
    }
    document.getElementById('MyPage_img_element').src = "esset/artistticket.png"
    control_key = ["home_tab", "collection_tab", "shop_tab", "event_tab"]
    document.getElementById(control_key[nowtab]).style.display = "block"
    document.getElementById("Artist_message_section").style.display = "none"
    document.getElementById("testbed").style.backgroundColor = "white"
    open_section = ""
}

function bottom_button_style(key) {
    // 모든 버튼 요소를 가져옵니다.
    const buttons = document.querySelectorAll(".bottom_button");

    // 반복문을 통해 모든 버튼의 스타일을 설정합니다.
    buttons.forEach((button, index) => {
        if (index === key) {
            // 클릭한 버튼의 배경을 보라색으로 설정
            button.style.backgroundColor = "blueviolet";
        } else {
            // 나머지 버튼은 검정색으로 설정
            button.style.backgroundColor = "black";
        }
    });

    // 모든 탭을 숨깁니다.
    const tabs = {
        0: document.getElementById("home_tab"),
        1: document.getElementById("collection_tab"),
        2: document.getElementById("shop_tab"),
        3: document.getElementById("event_tab")
    };

    // 모든 탭을 숨기고, 클릭한 탭만 보이도록 설정합니다.
    Object.keys(tabs).forEach(index => {
        if (index == key) {
            tabs[index].style.display = "block";
        } else {
            tabs[index].style.display = "none";
        }
    });
    
    if (community_open == 1) {
        document.getElementById('top_line').textContent = "GSUGAR"
        document.getElementById('top_btn').onclick = function() {
            closeSpecial()
        }
        control_key = ["home_tab", "collection_tab", "shop_tab", "event_tab"]
        document.getElementById("Community_section").style.display = "none"
        document.getElementById("testbed").style.backgroundColor = "white"
    } else {}

    document.getElementById("MyPage_trigger").onclick = function() {
        showMypage(key)
    }
}

async function submitPost() {
  channel[0] = false;
  const nickname = document.getElementById('nickname').value;
  const content = document.getElementById('content').value;
  const files = selectedFiles;
  const postId = getCurrentFormattedTime();
  const randomString = generateRandomString();
  let imgUrls = [];

  if (!nickname || !content) {
    alert("닉네임과 내용을 입력하세요.");
    return;
  }

  submitButton.disabled = true;
  submitButton.innerText = "업로드 중...";

  try {
    // IP 주소 가져오기
    const userIP = user_IP;
    const IMGarray = [];
    // St0rage에 이미지 업로드
    for (let i = 0; i < files.length && i < 10; i++) {
      const webpFile = await convertImageToWebP(files[i]);

      // 웹P 파일을 Base64로 인코딩
      const base64File = await convertFileToBase64(webpFile);

      
      await fetch("https://submitimgs-eno2n4pmqq-uc.a.run.app", {
        method: "POST",
        headers: {"Content-Type": "application/json",},
        body: JSON.stringify({ 
          filePath: `community/${open_lounge}/${postId + randomString}_${i + 1}`, 
          file: base64File, 
        }),
      });

      imgUrls.push(`community/${open_lounge}/${postId + randomString}_${i + 1}`);
    }

      // 게시글 ID를 list 배열에 추가
  await fetch("https://submitposts-eno2n4pmqq-uc.a.run.app", {
    method: "POST",
    headers: {"Content-Type": "application/json",},
    body: JSON.stringify({ 
      lounge: open_lounge, 
      postId: postId+randomString, 
      nickname: nickname, 
      content: content, 
      imgUrls: imgUrls, 
      ip: userIP,
      editKey: edit_key
    }),
  });

    // 게시글 ID를 list 배열에 추가
    await fetch("https://updatecommunitycomment-eno2n4pmqq-uc.a.run.app", {
      method: "POST",
      headers: {"Content-Type": "application/json",},
      body: JSON.stringify({ 
        key: `list`,
        lounge: open_lounge,
        postId: postId+randomString,
      }),
    });

    alert("글이 성공적으로 저장되었습니다.");
    call_checker = false;
    loadPosts(5); // 새로 저장된 글 표시
    closeWriteSecton();

  } catch (error) {
    console.error("업로드 중 에러 발생:", error);
    alert("업로드 중 오류가 발생했습니다. 다시 시도해주세요.");
  } finally {
    // 버튼 활성화 및 원래 텍스트 복원
    submitButton.disabled = false;
    submitButton.innerText = "글쓰기";
    document.getElementById('nickname').value = "";
    document.getElementById('content').value = "";
    selectedFiles = [];
    document.getElementById('preview-section').innerHTML = "";
    updateUI();
    keymake()
  }
}

async function editPost(key) {
  // document.getElementById("edit_section").style.display = "none"
  // document.getElementById("end_check_section").style.display = ""

  const data = await callData();
  console.log(key)
  // postId에서 날짜와 시간 추출 및 포맷팅
  const dateTime = key.match(/z(\d{12})a/)[1]; // YYYYMMDDhhmm 추출
  const formattedTime = `${dateTime.slice(0, 4)}. ${dateTime.slice(4, 6)}. ${dateTime.slice(6, 8)}. ${dateTime.slice(8, 10)}:${dateTime.slice(10, 12)}`;

  document.getElementById('nickname_edit').value = data[key].nickname
  document.getElementById('time_value_in_edit').innerText = formattedTime
  document.getElementById('edit_content').value = data[key].content

    // 이미지 추가
    let imagesContainer = document.getElementById('photo_in_edit');
    imagesContainer.style.cssText = "margin-top: 8px";
    imagesContainer.innerHTML = document.querySelector(`.photo-grid.${key}`).innerHTML;
  
    const imageElements = []; // 이미지를 담을 배
    
    // // 각 이미지를 비동기적으로 가져와 추가
    // for (const imgPath of data[key].img) {
    //     try {
    //         //사진 불러오기
            
    //         const response = await fetch("https://getfileurl-eno2n4pmqq-uc.a.run.app", {
    //           method: "POST",
    //           headers: {"Content-Type": "application/json",},
    //           body: JSON.stringify({ key: imgPath, }),
    //         });
        
    //         const result = await response.json();
    //         const url = result.url;
    //         const img = document.createElement('img');
    //         img.src = url;
    //         img.style.cssText = "width: 100%; aspect-ratio: 1 / 1; object-fit: cover; border-radius: 10px;";
    //         img.setAttribute('data-url', url); // 데이터 속성에 URL 저장
    //         img.classList.add('popup-image'); // 특정 클래스 추가
  
    //         imageElements.push(img); // 이미지 요소를 배열에 추가
    //     } catch (error) {
    //         console.error("Error fetching image URL for path:", imgPath, error);
    //     }
    // }
}
  
    // // 배열에 담긴 모든 이미지를 한 번에 DOM에 추가
    // imagesContainer.append(...imageElements);
    imagesContainer.setAttribute('data-count', document.querySelector(`.photo-grid.${key}`).dataset.count);